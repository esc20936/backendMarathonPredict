name: Build, Push, Deploy.

on:
  push:
    branches: [ main ]

jobs:
  retrain-job:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'  # Set the Python version that matches your project

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt  # Assumes you have a requirements.txt file
        pip install joblib  # Install additional packages if required

    - name: Run retrain.py
      env:
        PYTHONPATH: "${{ github.workspace }}"  # Adds the repository root to PYTHONPATH
      run: python models/retrain.py  # Path to your retrain.py script
      
  build_and_push:
    name: Push docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PSWD }}
        
      - name: Extract metadata (labels, tags, etc.) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: esc20936/python-ml-api  # Replace with your Docker Hub image

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: esc20936/python-ml-api:latest  # Replace with your Docker Hub image and tag
          labels: ${{ steps.meta.outputs.labels }}
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [ build_and_push ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Copy files via SSH key
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          source: "docker-compose.yml, nginx/nginx.conf"
          target: .
      - name: Run docker-compose commands
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            docker-compose down
            docker rmi -f $(docker images -q) || true
            docker-compose pull
            docker-compose up -d
